# sairam-tea-backend/src/main/resources/application.properties

# Server Port
server.port=8080

## MySQL Database Configuration
## Database URL, including auto-creation, SSL settings, and timezone
## For application.properties
#spring.datasource.url=jdbc:mysql://localhost:3306/sairam_tea_db_all?allowPublicKeyRetrieval=TRUE&useSSL=FALSE
## MySQL user to connect with (using 'root' as specified)
#spring.datasource.username=root
## IMPORTANT: REPLACE WITH YOUR ACTUAL MYSQL ROOT PASSWORD
#spring.datasource.password=26102004
#spring.jpa.hibernate.ddl-auto=update
## JPA/Hibernate Configuration
## 'update' will create/update tables automatically. For production, consider 'validate' or 'none'.

## Log SQL queries to console
#spring.jpa.show-sql=true
## Corrected Hibernate dialect for MySQL
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.datasource.url=postgresql://sairamtea_db_user:bk5A3TmqSBHHpuaaRkQcJcWDlnQWQSRV@dpg-d227e0m3jp1c738j1n00-a/sairamtea_db
spring.datasource.username=sairamtea_db_user
spring.datasource.password=bk5A3TmqSBHHpuaaRkQcJcWDlnQWQSRV
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect




# Spring Security (in-memory user for admin demo)
spring.security.user.name=admin
spring.security.user.password=adminpass
spring.security.user.roles=ADMIN

# Razorpay API Keys
# !!! IMPORTANT: Replace these with your actual Razorpay API Key ID and Key Secret from your dashboard !!!
# Make sure these lines contain ONLY the key=value pair, with no extra characters around the key/secret.
razorpay.key_id=rzp_test_8EmG077hBhaQiF
razorpay.key_secret=0aMSgdsjGkDuAY2yg20Jn1RX

## ... (Existing database and server properties) ...
## Spring Mail Properties (NEW)
#spring.mail.host=smtp.gmail.com
## For Gmail, port 587 is typically used with STARTTLS.
#spring.mail.port=587
#spring.mail.username=saiprasad26102004@gmail.com
## Use your generated App Password here if 2FA is enabled for Gmail.
#spring.mail.password=yfquqthlbgtdyzkg
#spring.mail.properties.mail.smtp.auth=true
## Enable TLS for secure communication.
#spring.mail.properties.mail.smtp.starttls.enable=true
## Uncomment the line below if you encounter SSLHandshakeException errors.
## spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Spring Mail Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=sharemyride.app@gmail.com
spring.mail.password=rrjrfhtwcifbnssl
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com


# Enable DEBUG logging for Spring Security
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# Directory for uploaded product images. This path will be created relative
# to the directory where your Spring Boot application's JAR file is executed.
# For example, if your JAR is in 'C:\Users\saipr\Desktop\SaiRamTea\backend\sairam-tea-backend\target',
# then images will be saved in 'C:\Users\saipr\Desktop\SaiRamTea\backend\sairam-tea-backend\target\uploads\images\products\'
file.upload-dir=uploads/images/products/

# JWT secret and expiration (customize as needed)
jwt.secret=Qw8n2vB7pLz6Xy3TgR9sJk5mVh1cZt4uEo7aWq2bNf8dSx0pLr3vYh6jQz5wTn8k
jwt.expiration=86400000
